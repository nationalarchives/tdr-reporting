name: TDR Run Reporting
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment: Choose prod for live data'
        required: true
        type: choice
        options:
          - intg
          - staging
          - prod
        default: 'intg'
      reportType:
        description: 'Report type'
        required: true
        type: choice
        options:
          - standard
          - caselaw
        default: 'standard'
permissions:
  id-token: write
  contents: write
run-name: Running ${{ inputs.reportType }} report on ${{ inputs.environment }} by @${{ github.actor }}
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: role-name
        run: |
          import os
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
            print(f"role-name=TDRGithubActionsDeployLambda{'${{ inputs.environment }}'.title()}", file=fh)
        shell: python
      - id: account-number-secret-name
        run: |
          import os
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
            print(f"account-number-secret-name={'${{ inputs.environment }}'.upper()}_ACCOUNT_NUMBER", file=fh)
        shell: python
      - name: Configure AWS credentials for Lambda
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ secrets[steps.account-number-secret-name.outputs.account-number-secret-name] }}:role/${{ steps.role-name.outputs.role-name }}
          aws-region: eu-west-2
          role-session-name: ECRLogin
      - name: run lambda function
        run: |
          aws lambda invoke --function-name tdr-reporting-${{ inputs.environment }} --cli-read-timeout 0 --cli-binary-format raw-in-base64-out --payload '{"userName": "${{ github.actor }}","reportType": "${{ inputs.reportType }}"}' response.json
